const fs = require('fs');
const path = require('path');

module.exports = (function () {
	let Application = function(request, response) {
		this.request = request;
		this.response = response;
	}

	Application.prototype.getFilePath = function(file) {
		file = file || this.request.url;
		let normalized = path.normalize(process.cwd() + file);
		return normalized;
	}
	
	Application.prototype.getMimeType = function(filePath) {
		if (filePath) {
			let ext = path.extname(filePath);
			let type = require('exemple09-module-mime');
			if (type[ext]) {
				return type[ext];
			};
		};

		return type['.txt'];
	}

	Application.prototype.openFile = function (filePath, callback) {
		fs.readFile(filePath, (error, data) => {
			callback(error, data);
		});
	};

	Application.prototype.sendResponse = function (data, code, mimeType) {
		this.response.writeHead(code, {
			'Content-Length': data.length,
			'Content-Type': mimeType
		});
		this.response.write(data, () => {
			this.response.end();
		});
	};


	Application.prototype.serve =  function () {
		let filePath = this.getFilePath();
		this.openFile(filePath, (error, data) => {
			if (error) {
				filePath = this.getFilePath('/404.html');
				this.openFile(filePath, (error, data) => {
					if (error) {
						this.sendResponse(new Buffer(error.message), 500, this.getMimeType());
					} else {
						this.sendResponse(data, 404, this.getMimeType(filePath));
					}
				});
			} else {
				this.sendResponse(data, 200, this.getMimeType(filePath));
			}
		});
	};

	
	return function(server) {
		server.on('request', (request, response) => {
			(new Application(request, response)).serve();
		});
		return server;
	};
}());

